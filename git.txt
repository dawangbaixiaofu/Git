git diff 显示两个不同分支的差异。
有几种不同的格式
	正常格式
	上下文格式
	合并格式
比较常用的是合并格式。这种格式的详细见（自己搜索）

git fetch origin master:temp
把远程库中master分支内容拉倒本地库中的temp新建分支。
git merge temp
在本地库的master分支下合并temp分支到master分支。
在合并之前需要查看两个分支的差异。使用命令是：
	git diff master temp
合并的时候，需要解决冲突的问题。

最后在合并好的master分支上，进行编辑，最后再
git push origin
提交到远程库，默认的是master分支

git中的工作目录，索引，提交之间的区别
git diff 在三者中进行对比的作用体现

--------------
git log 
--------------

git log 命令：
	可以查看提交commit history
git log 默认会输出commit hash , author ,date, commit message
	--oneline
	简化命令，仅仅输出commit hash 前7个字符串和commit message
	--stat
	在git log 输出内容的基础上添加文件增删的统计数据
	--p
	控制输出每个commit具体修改的内容，输出的形式以diff的形式给出。
	--author='username'
	用来过滤commit,限定输出给定的用户
	-n
	n是数字，表示要输出的数量
	--after 'date'
	--before 'date'
	限定指定日期范围的log
	--pretty=format:"%h-%an,%ar:%s"
	使用指定的格式来显示提交历史
	详细占位符的意义，可以去查看。
	--graph 
	 ASCII 字符串表示的简单图形，形象地展示了每个提交所在的分支及其分化衍合情况。

如何看git log --graph 的点线图？

	
--------------
git branch
--------------
git branch 
	列出本地已经存在的分支，并且在当前分支的前面用"*"标记
git branch -r 
	查看远程版本库分支列表
git branch -a
	查看所有分支，包括本地和远程的
git branch -d branchname
	删除branchname分支
git branch -vv
	查看本地分支对应的远程分支
git branch -m oldname newname
	给分支重命名

---------------------
git checkout
---------------------
两个作用：
	1.操作文件
	2.操作分支

何切换分支？
如何在remote创建分支？
	git push --set-upstream origin branch_name : local_branch_name
如何merge request？
	
如何合并远程库中的不同分支？


